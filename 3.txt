In Java, once an array is created, its size cannot be changed. Arrays in Java have a fixed size, and this size is defined when the array is created. If you need a resizable array-like structure, you can use classes from the Java Collections Framework, such as `ArrayList`.

Here's an example of how to use an `ArrayList`:

 Using `ArrayList` in Java

```java
import java.util.ArrayList;

public class Main {
    public static void main(String[] args) {
        // Creating an ArrayList
        ArrayList<Integer> arrayList = new ArrayList<>();

        // Adding elements to the ArrayList
        arrayList.add(1);
        arrayList.add(2);
        arrayList.add(3);
        arrayList.add(4);
        arrayList.add(5);

        // Printing elements of the ArrayList
        System.out.println("ArrayList Elements:");
        for (int i = 0; i < arrayList.size(); i++) {
            System.out.print(arrayList.get(i) + " ");
        }

        // Removing an element from the ArrayList
        arrayList.remove(2); // Removes the element at index 2 (value 3)

        System.out.println("\nArrayList Elements after removal:");
        for (int i = 0; i < arrayList.size(); i++) {
            System.out.print(arrayList.get(i) + " ");
        }

        // Adding a new element to the ArrayList
        arrayList.add(6);

        System.out.println("\nArrayList Elements after adding a new element:");
        for (int i = 0; i < arrayList.size(); i++) {
            System.out.print(arrayList.get(i) + " ");
        }
    }
}
```
 Explanation:
- Creating an ArrayList: `ArrayList<Integer> arrayList = new ArrayList<>();`
- Adding elements: `arrayList.add(1);`
- Accessing elements: `arrayList.get(i)`
- Removing elements: `arrayList.remove(2);`
- Adding a new element: `arrayList.add(6);`

`ArrayList` is a part of Java's `java.util` package, and it provides a dynamic array that can grow and shrink in size. It is a versatile and commonly used class for handling dynamic collections of objects in Java.